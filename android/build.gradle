group 'ie.equalit.ouisync_plugin'
version '1.0-SNAPSHOT'

Properties properties = new Properties()
file("../android/local.properties").withInputStream { properties.load(it) }

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.mozilla.rust-android-gradle:plugin:0.8.6"
    }
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        minSdkVersion 21
    }
    buildTypes {
        debug {
            android.packagingOptions.doNotStrip '**.so'   
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.annotation:annotation:1.0.2'
}

def debugTargets = properties.getProperty('debug.targets')?.split(',').collect{it as String}
def releaseTargets = properties.getProperty('release.targets')?.split(',').collect{it as String}

cargo {        
    module = "../ouisync"
    libname = "ouisync"
    // TODO: Find out how to do this in a better way.
    targets = gradle.startParameter.taskNames.any{it.toLowerCase().contains("debug")} ? debugTargets : releaseTargets
    profile = gradle.startParameter.taskNames.any{it.toLowerCase().contains("debug")} ? "debug" : "release"
    extraCargoBuildArguments = ['--lib']
}

// TODO: find a way to build only the requested architectures
preBuild.dependsOn 'cargoBuild'
